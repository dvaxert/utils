name: Build and Test Library
on: push
jobs:
  job:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        buildShared: [ 'ON', 'OFF' ]
        include:
          - os: windows-latest
            generator: '-G "Visual Studio 2022" -A x64'
          - os: ubuntu-latest
            generator: '-G "Ninja"'
          - os: macos-latest
            generator: ''

    runs-on: ${{matrix.os}}

    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install CMake.
        uses: lukka/get-cmake@latest
      
      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{github.workspace}}/vcpkg'
          vcpkgGitCommitId: 'fd1bdf6ad343e390a5d043b23f0022b3188b5ac2'
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Configure CMake
        run: 'cmake -S ${{github.workspace}} -B ${{github.workspace}}/build ${{matrix.generator}}
          -DUTILS_BUILD_SHARED_LIBS=${{matrix.buildShared}} 
          -DUTILS_BUILD_TESTING=ON 
          -DUTILS_INSTALL=OFF 
          -DUTILS_BUILD_EXAMPLE=OFF 
          -DUTILS_GENERATE_DOCUMENTATION=OFF 
          -DUTILS_PEDANTIC=ON 
          -DUTILS_WERROR=ON 
          -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake'

      - name: Build Debug
        run: 'cmake --build ${{github.workspace}}/build --config Debug'
        
      - name: Build Release
        run: 'cmake --build ${{github.workspace}}/build --config Release'
        
      - name: Test Debug
        working-directory: ${{github.workspace}}/build
        run: ctest -C Debug -VV
        
      - name: Test Release
        working-directory: ${{github.workspace}}/build
        run: ctest -C Release -VV
        